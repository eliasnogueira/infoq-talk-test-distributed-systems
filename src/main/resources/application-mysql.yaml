spring:
  application:
    name: payment-service
  datasource:
    url: jdbc:tc:mysql:9.2.0:///payments
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
    username: root
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  sql:
    init:
      mode: always

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: payment-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Para a aplicação iniciar mesmo sem Kafka
#spring.kafka.bootstrap-servers: localhost:9092
spring.kafka.listener.missing-topics-fatal: false


logging:
  level:
    org.springframework: INFO
    com.example.paymentservice: DEBUG

springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    url: /openapi.yaml
    path: /swagger-ui.html

fraud.check:
  url: http://localhost:8081/api/fraud
  api-key: secret-fraud-key
  timeout: 5000
